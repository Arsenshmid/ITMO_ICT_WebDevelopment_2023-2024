












File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/main.js

import { createApp } from 'vue'; 
import App from './App.vue';
import router from './router';
import store from './store'; //  хранилище Vuex
import axios from 'axios';
import { VueAxios } from 'vue-axios';
import 'bootstrap/dist/css/bootstrap.min.css';
import BootstrapVue3 from 'bootstrap-vue-3';

const app = createApp(App);

app.use(router);
app.use(store); // Vuex в приложении
app.use(BootstrapVue3);
app.use(VueAxios, axios);

// Проверка localStorage на наличие токена и его установка в состояние Vuex
const userToken = localStorage.getItem('userToken');
if (userToken) {
  store.commit('setUser', { token: userToken });
}

app.mount('#app');













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/App.vue

<template>
  <div class="app-container">
    <img alt="Vue logo" src="./assets/logo.png" class="logo">
    <div class="menu" v-if="showButtons">
      <h1>Добро пожаловать в наш отель!</h1>
      <button @click="showComponent = 'login'">Вход</button>
      <button @click="showComponent = 'registration'">Регистрация</button>
    </div>
    <LoginPage v-if="showComponent === 'login'" @show-user-profile="showUserProfile" />
    <RegistrationPage v-if="showComponent === 'registration'" />
    <UserProfile v-if="showComponent === 'userProfile'" @go-back="showMainButtons" />
  </div>
</template>

<script>
import RegistrationPage from './components/RegistrationPage.vue';
import LoginPage from './components/LoginPage.vue';
import UserProfile from './components/UserProfile.vue';

export default {
  name: 'App',
  components: {
    RegistrationPage,
    LoginPage,
    UserProfile
  },
  data() {
    return {
      showComponent: null,
      showButtons: true,
    };
  },
  methods: {
    showUserProfile() {
      this.showComponent = 'userProfile';
      this.showButtons = false;
    },
    showMainButtons() {
      this.showComponent = null;
      this.showButtons = true;
    }
  }
};
</script>

<style scoped>
.app-container {
  text-align: center;
  background: linear-gradient(to right, #b4ffb0, #b19dff); 
  min-height: 100vh;
}

.logo {
  max-width: 150px;
  margin: 20px auto;
}

.menu h1 {
  color: #fff;
  text-shadow: 2px 2px 4px #000;
}

.menu {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  margin-bottom: 20px;
}

button {
  padding: 10px 20px;
  border: none;
  background-color: #007bff;
  color: white;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #0056b3;
}
</style>













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/router/index.js

import { createRouter, createWebHistory } from 'vue-router';
import RegistrationPage from '../components/RegistrationPage.vue';
import LoginPage from '../components/LoginPage.vue';
import UserProfile from '../components/UserProfile.vue';

const routes = [
  
  { path: '/registration', component: RegistrationPage },
  { path: '/login', component: LoginPage },
  { path: '/user-profile', component: UserProfile },
  
  // другие маршруты...
];

const router = createRouter({
  history: createWebHistory(),
  routes,
});

export default router;













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/components/RegistrationPage.vue

<template>
  <div>
    <h2>Регистрация</h2>
    <!-- Форма регистрации -->
    <form @submit.prevent="register">
      <div class="input-wrapper">
        <input type="text" v-model="userData.username" placeholder="Имя пользователя">
      </div>
      <div class="input-wrapper">
        <input type="password" v-model="userData.password" placeholder="Пароль">
      </div>
      <button type="submit">Зарегистрироваться</button>
    </form>

    <!-- Сообщение об успешной регистрации -->
    <div v-if="registrationSuccess" class="success-message">
      Регистрация прошла успешно! Теперь вы можете войти.
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      userData: {
        username: '',
        email: '',
        password: ''
      },
      registrationSuccess: false, // Добавляем переменную для отслеживания успешной регистрации
    };
  },
  methods: {
    async register() {
      try {
        const response = await fetch('http://localhost:8000/hotel_api/register/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(this.userData)
        });

        if (response.ok) {
          const data = await response.json();
          console.log('Успешная регистрация', data);
          this.registrationSuccess = true; // Устанавливаем успешную регистрацию в true
        } else {
          console.error('Ошибка регистрации', response.statusText);
        }
      } catch (error) {
        console.error('Ошибка сети', error);
      }
    }
  }
};
</script>

<style scoped>
.navigation-links {
  text-align: center;
  margin-bottom: 20px;
}

.navigation-links a {
  margin: 0 10px;
  text-decoration: none;
  color: #333;
  font-weight: bold;
}

.navigation-links a:hover {
  color: #007bff;
  text-decoration: underline;
}

.input-wrapper {
  margin-bottom: 10px; /* Расстояние между полями ввода */
}

.success-message {
  color: green;
  margin-top: 10px;
}
</style>













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/components/LoginPage.vue

<template>
  <form @submit.prevent="login">
    <h2>Вход</h2>
    <div class="input-wrapper">
      <input type="text" v-model="userData.username" placeholder="Имя пользователя">
    </div>
    <div class="input-wrapper">
      <input type="password" v-model="userData.password" placeholder="Пароль">
    </div>
    <button type="submit">Получить токен</button>
    <!-- Добавленный элемент для отображения сообщения об ошибке -->
    <div v-if="errorMessage" class="error-message">{{ errorMessage }}</div>
    <div v-if="token">Токен: {{ token }}</div>
  </form>

  <!-- форма для входа по токену -->
  <form @submit.prevent="loginWithToken">
    <h2>Войти с токеном</h2>
    <div class="input-wrapper">
      <input type="text" v-model="token" placeholder="Введите токен">
    </div>
    <button @click="loginWithTokenClick">Войти с токеном</button>
  </form>
</template>

<script>
export default {
  data() {
    return {
      userData: {
        username: '',
        password: '',
      },
      token: '',
      errorMessage: '',
    };
  },
  methods: {
    async login() {
      try {
        const response = await fetch('http://localhost:8000/hotel_api/api/login/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(this.userData)
        });

        if (response.ok) {
          const data = await response.json();
          this.token = data.access;
          localStorage.setItem('userToken', data.access);
          this.errorMessage = ''; // Сброс сообщения об ошибке
        } else {
          this.errorMessage = 'Введите корректные данные'; // Обновленное сообщение об ошибке
        }
      } catch (error) {
        console.error('Ошибка сети', error);
      }
    },
    loginWithTokenClick() {
      if (this.token) {
        localStorage.setItem('userToken', this.token);
        this.$emit('show-user-profile');
      } else {
        this.errorMessage = 'Введите токен';
      }
    }
  }
};
</script>

<style>
.input-wrapper {
  margin-bottom: 10px;
}

.error-message {
  color: red;
  margin-top: 10px;
}
</style>













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/components/UserProfile.vue

<template>
  <div>
    <h2>Добро пожаловать в систему управления отелем, {{ userName }}</h2>
    <div class="navigation-links">
      <button @click="showRooms">Комнаты</button>
      <router-link to="/clients">Клиенты</router-link>
      <router-link to="/employees">Сотрудники</router-link>
      <button @click="emitBack">Назад</button>
    </div>
    <RoomsTable v-if="showRoomsTable" />
  </div>
</template>

<script>
import RoomsTable from './RoomsTable.vue';

export default {
  components: {
    RoomsTable
  },
  data() {
    return {
      showRoomsTable: false
    };
  },
  computed: {
    userName() {
      const username = this.$store.state.user ? this.$store.state.user.username : 'Guest';
      console.log('Current username:', username);
      return username;
    }
  },
  methods: {
    showRooms() {
      this.showRoomsTable = true;
    },
    emitBack() {
      this.$emit('go-back');
    }
  }
};
</script>


<style scoped>
.navigation-links {
  text-align: center;
  margin-bottom: 20px;
}

.navigation-links a, .navigation-links button {
  margin: 0 10px;
  text-decoration: none;
  color: #333;
  font-weight: bold;
}

.navigation-links a:hover, .navigation-links button:hover {
  color: #007bff;
  text-decoration: underline;
}
</style>













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/store.js

import { createStore } from 'vuex';

export default createStore({
  state: {
    user: null,
  },
  mutations: {
    setUser(state, userData) {
      console.log('Updating user data:', userData);
      state.user = userData;
    },
    clearUser(state) {
      state.user = null;
    },
  },
  getters: {
    isAuthenticated: state => !!state.user,
    user: state => state.user,
  },
});
















File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/components/RoomsTable.vue

<template> 
  <div>
    <h2>Список комнат</h2>
    <label for="room_type">Room Type:</label>
    <select v-model="filterType">
      <option value="">--Select a Type--</option>
      <option value="single">Single</option>
      <option value="double">Double</option>
      <option value="suite">Suite</option>
    </select>

    <label for="room_status">Room Status:</label>
    <select v-model="filterStatus">
      <option value="">--Select a Status--</option>
      <option value="available">Available</option>
      <option value="occupied">Occupied</option>
      <option value="cleaning">Cleaning</option>
    </select>

    <button @click="applyFilter">Filter</button>

    <table>
      <thead>
        <tr>
          <th>Room Type</th>
          <th>Floor Number</th>
          <th>Status</th>
          <th>Cost</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="room in filteredRooms" :key="room.id">
          <td>{{ room.room_type }}</td>
          <td>{{ room.floor.number }}</td>
          <td>{{ room.status }}</td>
          <td>{{ room.cost }}</td>
          <td>
            <button v-if="room.status === 'available'" @click="bookRoom(room.id)">
              Book
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</template>

<script>
import axios from 'axios';

export default {
  data() {
    return {
      rooms: [],
      filterType: '',
      filterStatus: ''
    };
  },
  computed: {
    filteredRooms() {
      return this.rooms.filter(room => {
        return (!this.filterType || room.room_type === this.filterType) &&
               (!this.filterStatus || room.status === this.filterStatus);
      });
    }
  },
  created() {
    this.fetchRooms();
  },
  methods: {

    fetchRooms() {
    axios.get('http://localhost:8000/hotel_api/api/rooms/')
      .then(response => {
        this.rooms = response.data;
      })
      .catch(error => {
        console.error('Error loading rooms:', error);
      });
  },
    applyFilter() {
      this.fetchRooms();
    },
    bookRoom(roomId) {
  const token = localStorage.getItem('userToken'); // Получение токена из localStorage

  axios.post(`http://localhost:8000/hotel_api/api/book_room/${roomId}/`, {
    start_date: this.start_date,
    end_date: this.end_date
  }, {
    headers: {
      Authorization: `Bearer ${token}` // Добавление токена в заголовок запроса
    }
  })
    .then(response => {
        if (response.data.status === 'success') {
            alert('Room booked successfully');
            this.fetchRooms(); // Обновить список комнат
        } else {
            console.error('Error response:', response.data);
            alert('Failed to book room: ' + response.data.message);
        }
    })
    .catch(error => {
        console.error('Error booking room:', error);
        alert('Failed to book room: ' + error.message);
    });
}

  



}
};
</script>

<style scoped>
table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  border: 1px solid #ddd;
  padding: 8px;
  text-align: left;
}

th {
  background-color: #f2f2f2;
}

td {
  background-color: #fff;
}

tr:hover {
  background-color: #f5f5f5;
}
</style>













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/package.json

{
  "name": "my-project",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint"
  },
  "dependencies": {
    "axios": "^1.6.3",
    "bootstrap": "^5.3.2",
    "bootstrap-vue": "^2.23.1",
    "core-js": "^3.8.3",
    "vue": "^3.2.13",
    "vue-axios": "^3.5.2"
  },
  "devDependencies": {
    "@babel/core": "^7.12.16",
    "@babel/eslint-parser": "^7.12.16",
    "@vue/cli-plugin-babel": "~5.0.0",
    "@vue/cli-plugin-eslint": "~5.0.0",
    "@vue/cli-service": "~5.0.0",
    "eslint": "^7.32.0",
    "eslint-plugin-vue": "^8.0.3"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "node": true
    },
    "extends": [
      "plugin:vue/vue3-essential",
      "eslint:recommended"
    ],
    "parserOptions": {
      "parser": "@babel/eslint-parser"
    },
    "rules": {}
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead",
    "not ie 11"
  ]
}













File: C:/Users/apce1/Desktop/УЧЕБА/Веб-программирование/ITMO_ICT_WebDevelopment_2023-2024/students/к3343d/labs/Nikiforov_Arsen/лаб4/my-project/src/store.js

import { createStore } from 'vuex';

export default createStore({
  state: {
    user: null,
  },
  mutations: {
    setUser(state, userData) {
      console.log('Updating user data:', userData);
      state.user = userData;
    },
    clearUser(state) {
      state.user = null;
    },
  },
  getters: {
    isAuthenticated: state => !!state.user,
    user: state => state.user,
  },
});



